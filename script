--Settings: [make it a loadstring for it to work on mobile or else it will crash]
local ScriptStarted = false
local Keybind = "Q"
local Transparency = true
local NoClip = false

local Player = game:GetService("Players").LocalPlayer
local RealCharacter = Player.Character or Player.CharacterAdded:Wait()

local IsInvisible = false

RealCharacter.Archivable = true
local FakeCharacter = RealCharacter:Clone()
local Part
Part = Instance.new("Part", workspace)
Part.Anchored = true
Part.Size = Vector3.new(200, 1, 200)
Part.CFrame = CFrame.new(0, -500, 0) --Set this to whatever you want, just far away from the map.
Part.CanCollide = true
FakeCharacter.Parent = workspace
FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)

for i, v in pairs(RealCharacter:GetChildren()) do
    if v:IsA("LocalScript") then
        local clone = v:Clone()
        clone.Disabled = true
        clone.Parent = FakeCharacter
    end
end
if Transparency then
    for i, v in pairs(FakeCharacter:GetDescendants()) do
        if v:IsA("BasePart") then
            v.Transparency = 0.7
        end
    end
end
local CanInvis = true
function RealCharacterDied()
    CanInvis = false
    RealCharacter:Destroy()
    RealCharacter = Player.Character
    CanInvis = true
    isinvisible = false
    FakeCharacter:Destroy()
    workspace.CurrentCamera.CameraSubject = RealCharacter.Humanoid

    RealCharacter.Archivable = true
    FakeCharacter = RealCharacter:Clone()
    Part:Destroy()
    Part = Instance.new("Part", workspace)
    Part.Anchored = true
    Part.Size = Vector3.new(200, 1, 200)
    Part.CFrame = CFrame.new(9999, 9999, 9999) --Set this to whatever you want, just far away from the map.
    Part.CanCollide = true
    FakeCharacter.Parent = workspace
    FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)

    for i, v in pairs(RealCharacter:GetChildren()) do
        if v:IsA("LocalScript") then
            local clone = v:Clone()
            clone.Disabled = true
            clone.Parent = FakeCharacter
        end
    end
    if Transparency then
        for i, v in pairs(FakeCharacter:GetDescendants()) do
            if v:IsA("BasePart") then
                v.Transparency = 0.7
            end
        end
    end
    RealCharacter.Humanoid.Died:Connect(function()
    RealCharacter:Destroy()
    FakeCharacter:Destroy()
    end)
    Player.CharacterAppearanceLoaded:Connect(RealCharacterDied)
end
RealCharacter.Humanoid.Died:Connect(function()
RealCharacter:Destroy()
FakeCharacter:Destroy()
end)
Player.CharacterAppearanceLoaded:Connect(RealCharacterDied)
local PseudoAnchor
game:GetService "RunService".RenderStepped:Connect(
function()
    if PseudoAnchor ~= nil then
        PseudoAnchor.CFrame = Part.CFrame * CFrame.new(0, 5, 0)
    end
     if NoClip then
    FakeCharacter.Humanoid:ChangeState(11)
     end
end
)

PseudoAnchor = FakeCharacter.HumanoidRootPart
local function Invisible()
if IsInvisible == false then
    local StoredCF = RealCharacter.HumanoidRootPart.CFrame
    RealCharacter.HumanoidRootPart.CFrame = FakeCharacter.HumanoidRootPart.CFrame
    FakeCharacter.HumanoidRootPart.CFrame = StoredCF
    RealCharacter.Humanoid:UnequipTools()
    Player.Character = FakeCharacter
    workspace.CurrentCamera.CameraSubject = FakeCharacter.Humanoid
    PseudoAnchor = RealCharacter.HumanoidRootPart
    for i, v in pairs(FakeCharacter:GetChildren()) do
        if v:IsA("LocalScript") then
            v.Disabled = false
        end
    end

    IsInvisible = true
else
    local StoredCF = FakeCharacter.HumanoidRootPart.CFrame
    FakeCharacter.HumanoidRootPart.CFrame = RealCharacter.HumanoidRootPart.CFrame
   
    RealCharacter.HumanoidRootPart.CFrame = StoredCF
   
    FakeCharacter.Humanoid:UnequipTools()
    Player.Character = RealCharacter
    workspace.CurrentCamera.CameraSubject = RealCharacter.Humanoid
    PseudoAnchor = FakeCharacter.HumanoidRootPart
    for i, v in pairs(FakeCharacter:GetChildren()) do
        if v:IsA("LocalScript") then
            v.Disabled = true
        end
    end
    IsInvisible = false
end
end

game:GetService("UserInputService").InputBegan:Connect(
function(key, gamep)
    if gamep then
        return
    end
    if key.KeyCode.Name:lower() == Keybind:lower()kay."})
 and CanInvis and RealCharacter and FakeCharacter then
        if RealCharacter:FindFirstChild("HumanoidRootPart") and FakeCharacter:FindFirstChild("HumanoidRootPart") then
            Invisible()
        end
    end
end
)
local Sound = Instance.new("Sound",game:GetService("SoundService"))
Sound.SoundId = "rbxassetid://232127604"
Sound:Play()
game:GetService("StarterGui"):SetCore("SendNotification",{["Title"] = "Invisible Toggle Loaded",["Text"] = "Press "..Keybind.." to become change visibility.",["Duration"] = 20,["Button1"] = "Okay."})

-- GUI Integration --
-- Create the GUI
local gui = Instance.new("ScreenGui")
gui.Name = "InvisibleGuiScript"
gui.Parent = game.Players.LocalPlayer.PlayerGui

-- Create the frame for the GUI
local frame = Instance.new("Frame")
frame.Name = "MainFrame"
frame.Size = UDim2.new(0, 250, 0, 100)
frame.Position = UDim2.new(0.5, -125, 0.5, -75)
frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
frame.BorderSizePixel = 0
frame.Parent = gui

-- Create the title textbox
local title = Instance.new("TextBox")
title.Name = "Title"
title.Size = UDim2.new(1, 0, 0, 30)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
title.BorderSizePixel = 0
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Text = "Invisible Gui Script"
title.Font = Enum.Font.SourceSans
title.TextSize = 18
title.TextWrapped = true
title.TextXAlignment = Enum.TextXAlignment.Center
title.Parent = frame

-- Create the toggle button
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(0, 200, 0, 50)
toggleButton.Position = UDim2.new(0.5, -100, 1, -60)
toggleButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
toggleButton.BorderSizePixel = 0
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Text = "Invisible [Disabled]"
toggleButton.Font = Enum.Font.SourceSans
toggleButton.TextSize = 18
toggleButton.Parent = frame

-- Function to toggle invisibility
local function ToggleInvisibility()
    if IsInvisible then
        Invisible()
        toggleButton.Text = "Invisible [Disabled]"
    else
        Invisible()
        toggleButton.Text = "Invisible [Enabled]"
    end
end

-- Connect toggle button to function
toggleButton.MouseButton1Click:Connect(ToggleInvisibility)
